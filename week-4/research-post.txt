Renee Dubuc
4 November 2021

How does a promise work?

What are the differences between callbacks and promises?

CALLBACKs and PROMISEs are ways to handle asynchronous code, meaning multiple lines of code can start being processed without waiting for the previous lines to finish.1

A PROMISE is "An object [that] represents the eventual completion (or failure) of an asynchronous operation and its resulting value."2 When you don't know the value at the time of creation, use a PROMISE as a placeholder.

PROMISEs have 3 possible states:

"Pending: Initial state, neither fulfilled nor rejected.
Fulfilled: Meaning that the operation was completed successfully.
Rejected: Meaning that the operation failed."2

When a Pending PROMISE is updated to Fulfilled (has a value now) or Rejected (throws an error) status, the THEN (.then()) method is called. THEN is the piece that dictates what to do in the event of successful completion. The corresponding HANDLER will be called if the PROMISE had previously been Fulfilled or Rejected at the time the HANDLER was attached.2 CATCH can also be used to dictate what to do in the case of a failure, and is often used for error logging. According to MDN, "A .catch() is really just a .then() without a slot for a CALLBACK function for the case when the PROMISE is resolved."2

PROMISEs differ from CALLBACKs, which can also be used synchronously. A CALLBACK "Is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action."3 It can be used inside a PROMISE's THEN method. CALLBACKs are still seen today in older code, but today's JS has largely replaced them with PROMISEs.




Sources
1 https://blog.bitsrc.io/understanding-asynchronous-javascript-the-event-loop-74cd408419ff

2 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise

3 https://developer.mozilla.org/en-US/docs/Glossary/Callback_function