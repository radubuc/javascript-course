Q: If the day is "Sunday" or "Saturday", print true. Otherwise, print false. The values should be of type boolean, not strings.

MY ANSWER:

var day = "Monday";

if (day === "Sunday" || day === "Saturday"){
    console.log(true)
} else {
    console.log(false)
}


INSTRUCTOR ANSWER:
console.log(day === "Sunday" || day === "Saturday");

_______________________________________________________

Q: Using a boolean operator, print the result of num1 is greater than num2. Then write another comparison printing the result of num1 is less than num2.

MY ANSWER:

console.log(num1 > num2);
console.log(num1 < num2);


INSTRUCTOR ANSWER: Same as mine

_______________________________________________________

Q: Using Boolean Operators, print the result of a is greater than b or b and c are greater than d. You will need to use the greater than >, OR ||, and AND && operators. B is greater than D AND C is greater than D will need to be in parenthesis to ensure they are checked against the A is greater than B.

MY ANSWER:

console.log(a > b || (b && c) > d);


INSTRUCTOR ANSWER:

console.log(a > b || (b > d && c > d));

*My answer passed all 6 test cases and was marked correct, but I asked Matthew Cox if these evaluate the same all the time.

MATT'S EXPLANATION:
They are not the same expressions written different ways, despite evaluating the same in the test cases.
var a = 5;
var b = 1;
var c = 15;
var d = 10;

//Instructor's solution
console.log("Condition 1:", a > b); // condition is true
console.log("Condition 2:", c > d && b > d); // condition is false

// if one or both conditions are true, the result is true
console.log(a > b || (c > d && b > d));

// Renee's solution
console.log("Condition 1:", a > b); // condition is true
console.log("Condition 2:", (b && c) > d); // condition is true

// if both conditions are true, the result is true
console.log(a > b || (b && c) > d);


//More in-depth explanation:
console.log(1 && 15) // evaluates to 15, because here 1 evaluates to boolean value of true. Reads like (true && 15). Note that JS is NOT interpreting 1 as an integer here. 
console.log(1 || 15) // evaluates to 1, because here 1 evaluates to boolean value of true. Reads like (true or 15). Note that JS is NOT interpreting 1 as an integer here. 

Plugging into the original expressions:
My answer:

console.log(a > b || (b && c) > d);
console.log(5 > 1 || (1 && 15) > 10);
console.log(true || (true && 15) > 10);
console.log(true || true);
console.log(true);

*BIG NOTE: JS does not use my parentheses to read the expression like I am reading it! I intended it to read like "both 1 && 15" are greater than 10. JS is reading it like "true and also 15 > 10". In order for JS to interpret it like I want it to be interpreted, I need to write it like "1 && (15 > 10)" or "1 && 15 > 10".

*BIG NOTE: The source of my confusion: "But then why would JS interpret the 1 in (1 && 15) > 10 as the value true, instead of the integer 1 like I'm intending?" Matt's answer: "Another thing to remember is 0 = false, any other number would evaluate to true in the examples we have been using." Here's a forum that that is helpful in understanding the logic: https://www.codecademy.com/forum_questions/558875079376768d09000108#:~:text=0%20and%201%20are%20type,number%20that%20evaluates%20to%20falsy

_______________________________________________________

Q: Determine if myGrade is passing. Using console.log(), print true if it is and false if not. Then, determine if myGrade is an A. Using console.log(), print true or false to the console. (A will be 90 or above). To determine if myGrade is passing, it must be greater than or equal to >= passingGrade. To determine if myGrade is an A, it must be greater than or equal to >= 90.

MY ANSWER:

var myGrade = 80;
var passingGrade = 70;
var gradeA = 90;

console.log(myGrade >= passingGrade);

console.log(myGrade >= gradeA);


INSTRUCTOR ANSWER:

console.log(myGrade >= passingGrade);
console.log(myGrade >= 90);

_______________________________________________________

Q: Using boolean operators, print true or false if age is greater than or equal to 16.

MY ANSWER:

console.log(age >= 16);

INSTRUCTOR ANSWER: Same as mine

_______________________________________________________

